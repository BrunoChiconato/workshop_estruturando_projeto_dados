[tool.poetry]
name = "workshop-estruturando-projeto-dados"
version = "0.1.0"
description = ""
authors = ["Bruno Chiconato <brunochiconato01@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
pandas = "^2.2.3"
numpy = "^2.1.2"
fastparquet = "^2024.5.0"
loguru = "^0.7.2"
pytest = "^8.3.3"
python-dotenv = "^1.0.1"
sqlalchemy = "^2.0.36"
psycopg2-binary = "^2.9.10"
psycopg2 = "^2.9.10"
isort = "^5.13.2"
black = "^24.10.0"
pandera = "^0.20.4"
mkdocs = "^1.6.1"
mkdocs-material = "^9.5.42"
mkdocstrings-python = "^1.12.2"
pygments = "^2.18.0"
pymdown-extensions = "^10.11.2"


[tool.poetry.group.dev.dependencies]
taskipy = "^1.14.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
pythonpath = ["."]

[tool.taskipy.tasks]
test = { cmd = "pytest .", help = "runs all unit tests" }
main = { cmd = "python -m app.pipeline", help = "runs the 'pipeline.py' script" }
gen_data = { cmd = "python funcs/generate_data.py", help = "runs the 'generate_data.py' script" }
isort = { cmd = "isort .", help = "runs the isort command in every script on the project" }
kill = { cmd = "kill -9 $(lsof -t -i :8000)", help = "kills all processes running on port 8000" }